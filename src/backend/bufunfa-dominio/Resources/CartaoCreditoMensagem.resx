<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cartao_Alterado_Com_Sucesso" xml:space="preserve">
    <value>Cartão de crédito alterado com sucesso.</value>
  </data>
  <data name="Cartao_Alterar_Nao_Pertence_Usuario" xml:space="preserve">
    <value>O cartão de crédito que se deseja alterar, não pertence ao usuário autenticado.</value>
  </data>
  <data name="Cartao_Cadastrado_Com_Sucesso" xml:space="preserve">
    <value>Cartão de crédito cadastrado com sucesso.</value>
  </data>
  <data name="Cartao_Com_Mesmo_Nome" xml:space="preserve">
    <value>Você já possui um cartão cadastrado com o nome informado. Informe um nome diferente para o cartão.</value>
  </data>
  <data name="Cartao_Encontrado_Com_Sucesso" xml:space="preserve">
    <value>Cartão de crédito encontrado com sucesso.</value>
  </data>
  <data name="Cartao_Excluido_Com_Sucesso" xml:space="preserve">
    <value>Cartão de crédito excluído com sucesso.</value>
  </data>
  <data name="Cartao_Excluir_Erro_FK" xml:space="preserve">
    <value>Existem outras informações relacionadas a esse cartão de crédito, por isso não é possível excluí-lo.</value>
  </data>
  <data name="Cartao_Excluir_Nao_Pertence_Usuario" xml:space="preserve">
    <value>O cartão de crédito que se deseja excluir, não pertence ao usuário autenticado.</value>
  </data>
  <data name="Cartao_Nao_Pertence_Usuario" xml:space="preserve">
    <value>O cartão de crédito não pertence ao usuário autenticado.</value>
  </data>
  <data name="Cartoes_Encontrados_Com_Sucesso" xml:space="preserve">
    <value>Cartão(ões) do usuário encontrado(s) com sucesso.</value>
  </data>
  <data name="Dia_Vencimento_Fatura_Invalido" xml:space="preserve">
    <value>O dia do vencimento da fatura do cartão é inválido.</value>
  </data>
  <data name="Fatura_Ano_Obrigatorio_Nao_Informado" xml:space="preserve">
    <value>O ano da fatura é obrigatório e não foi informado.</value>
  </data>
  <data name="Fatura_Data_Pagamento_Obrigatorio_Nao_Informado" xml:space="preserve">
    <value>A data do pagamento da fatura é obrigatória e não foi informada.</value>
  </data>
  <data name="Fatura_Encontrada_Com_Sucesso" xml:space="preserve">
    <value>A fatura foi encontrada com sucesso.</value>
  </data>
  <data name="Fatura_Id_Lancamento_Nao_Encontrada" xml:space="preserve">
    <value>A fatura não foi encontrada a partir do ID do lançamento informado.</value>
  </data>
  <data name="Fatura_Mes_Obrigatorio_Nao_Informado" xml:space="preserve">
    <value>O mês da fatura é obrigatório e não foi informado.</value>
  </data>
  <data name="Fatura_Paga_Com_Sucesso" xml:space="preserve">
    <value>O pagamento da fatura foi realizado com sucesso.</value>
  </data>
  <data name="Fatura_Saldo_Insuficiente_Pagamento_Fatura" xml:space="preserve">
    <value>O saldo disponível na conta ({0}) é insuficiente para realizar o pagamento da fatura.</value>
  </data>
  <data name="Fatura_Valor_Pagamento_Menor_Valor_Total_Fatura" xml:space="preserve">
    <value>O valor do pagamento é menor que o valor total da fatura. Não é possível realizar o pagamento da fatura nessas condições.</value>
  </data>
  <data name="Id_Cartao_Invalido" xml:space="preserve">
    <value>O ID do cartão de crédito informado é inválido.</value>
  </data>
  <data name="Id_Cartao_Nao_Existe" xml:space="preserve">
    <value>O cartão de crédito com o ID informado não existe.</value>
  </data>
  <data name="Nenhum_Cartao_Encontrado" xml:space="preserve">
    <value>Nenhum cartão do usuário foi encontrado.</value>
  </data>
  <data name="Nome_Obrigatorio_Nao_Informado" xml:space="preserve">
    <value>O nome do cartão é obrigatório e não foi informado.</value>
  </data>
  <data name="Nome_Tamanho_Maximo_Excedido" xml:space="preserve">
    <value>O nome do cartão deve possuir no máximo 100 caracteres.</value>
  </data>
  <data name="Observacao_Credito_Tamanho_Maximo_Excedido" xml:space="preserve">
    <value>A observação referente ao crédito adicional da fatura deve possuir no máximo 100 caracteres.</value>
  </data>
  <data name="Observacao_Debito_Tamanho_Maximo_Excedido" xml:space="preserve">
    <value>A observação referente ao débito adicional da fatura deve possuir no máximo 100 caracteres.</value>
  </data>
  <data name="Valor_Limite_Invalido" xml:space="preserve">
    <value>O valor do limite do cartão é inválido.</value>
  </data>
</root>